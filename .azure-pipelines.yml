pool:
  vmImage: 'windows-2022'

trigger:
  branches:
    include:
      - master
      - beta
      - release/beta/*
      - stable
      - release/stable/*

pr: 
  branches:
    include:
      - master
      - beta
      - release/beta/*
      - stable
      - release/stable/*

steps:
  - checkout: self
    clean: 'true'

  # Restore nuget.org to the list of existing sources, .NET 6 Pre 2 may somehow remove it
  - powershell: |
      dotnet nuget add source https://api.nuget.org/v3/index.json -n nuget.org | Out-Null
      $global:LASTEXITCODE = 0
    displayName: Adjust nuget.org source

  - task: gitversion/setup@0
    inputs:
      versionSpec: '5.6.8'

  - task: gitversion/execute@0
    inputs:
      useConfigFile: true
      configFilePath: gitversion.yml
    displayName: Use GitVersion

  # This SDK version is needed as long as `uap10.0` will be supported in Uno.Core
  - powershell: .\build\Install-WindowsSdkISO.ps1 17763
    displayName: Install Windows SDK 17763

  - task: MSBuild@1
    inputs:
      solution: src/Uno.Core.sln
      msbuildArchitecture: x86
      msbuildArguments: /r /p:Configuration=Release "/p:PackageOutputPath=$(build.artifactstagingdirectory)\vs2017" "/p:PackageVersion=%GITVERSION_FullSemVer%" "/p:InformationalVersion=%GITVERSION_InformationalVersion%" /detailedsummary
      clean: false
      maximumCpuCount: true
      restoreNugetPackages: false
      logProjectEvents: false
      createLogFile: false

  - task: VisualStudioTestPlatformInstaller@1

  - task: VSTest@2
    inputs:
      testAssemblyVer2: |
        **\*test*.dll
        !**\obj\**
      vsTestVersion: toolsInstaller
      testSelector: testAssemblies

  - task: PowerShell@2
    displayName: Authenticode Sign Packages
    inputs:
      filePath: build/Sign-Package.ps1
    env:
      SignClientUser: $(SignClientUser)
      SignClientSecret: $(SignClientSecret)
      SignPackageName: "Uno.PackageDiff"
      SignPackageDescription: "Uno.PackageDiff"
      ArtifactDirectory: $(build.artifactstagingdirectory)
    condition: and(succeeded(), not(eq(variables['build.reason'], 'PullRequest')), not(eq(variables['SignClientSecret'], '')), not(eq(variables['SignClientUser'], '')))

  - task: PublishBuildArtifacts@1
    inputs:
      ArtifactName: $(Build.DefinitionName)
