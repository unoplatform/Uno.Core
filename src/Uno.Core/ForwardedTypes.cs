using System.Runtime.CompilerServices;

[assembly: TypeForwardedTo(typeof(Uno.IUpdatable<>))]
[assembly: TypeForwardedTo(typeof(Uno.Collections.MemoryExtensions))]
[assembly: TypeForwardedTo(typeof(Uno.Collections.UnsafeWeakAttachedDictionary<,>))]
[assembly: TypeForwardedTo(typeof(Uno.Collections.WeakAttachedDictionary<,>))]
[assembly: TypeForwardedTo(typeof(Uno.Extensions.CollectionExtensions))]
[assembly: TypeForwardedTo(typeof(Uno.Extensions.DictionaryExtensions))]
[assembly: TypeForwardedTo(typeof(Uno.Extensions.EnumerableExtensions))]
[assembly: TypeForwardedTo(typeof(Uno.Extensions.IBindableGrouping<,>))]
[assembly: TypeForwardedTo(typeof(Uno.Extensions.BindableGroup<,>))]
[assembly: TypeForwardedTo(typeof(Uno.Extensions.GroupDescriptor<,>))]
[assembly: TypeForwardedTo(typeof(Uno.Extensions.GroupDescriptorComparer<>))]
[assembly: TypeForwardedTo(typeof(Uno.Extensions.ListExtensions))]
[assembly: TypeForwardedTo(typeof(Uno.Extensions.ObservableCollectionExtensions))]
[assembly: TypeForwardedTo(typeof(Uno.Extensions.ObservableCollectionUpdateResults<>))]
[assembly: TypeForwardedTo(typeof(Uno.Extensions.QueueExtensions))]
[assembly: TypeForwardedTo(typeof(Uno.Extensions.StackExtensions))]
[assembly: TypeForwardedTo(typeof(Uno.Extensions.Specialized.EnumerableExtensions))]
[assembly: TypeForwardedTo(typeof(Uno.TaskUtilities))]
[assembly: TypeForwardedTo(typeof(Uno.Cancellable))]
[assembly: TypeForwardedTo(typeof(Uno.CompositionType))]
[assembly: TypeForwardedTo(typeof(Uno.DataStatus))]
[assembly: TypeForwardedTo(typeof(Uno.DelegateConditionalWeakTable<>))]
[assembly: TypeForwardedTo(typeof(Uno.EnumUtilities))]
[assembly: TypeForwardedTo(typeof(Uno.FallbackValueAttribute))]
[assembly: TypeForwardedTo(typeof(Uno.FieldsExtensions))]
[assembly: TypeForwardedTo(typeof(Uno.Grouping<,>))]
[assembly: TypeForwardedTo(typeof(Uno.I<>))]
[assembly: TypeForwardedTo(typeof(Uno.IIdentifiable))]
[assembly: TypeForwardedTo(typeof(Uno.IInitializable))]
[assembly: TypeForwardedTo(typeof(Uno.IInvalidatable))]
[assembly: TypeForwardedTo(typeof(Uno.ILoadable))]
[assembly: TypeForwardedTo(typeof(Uno.Instance<>))]
[assembly: TypeForwardedTo(typeof(Uno.InternalsWriteableFromAttribute))]
[assembly: TypeForwardedTo(typeof(Uno.IServiceLocatorProvider))]
[assembly: TypeForwardedTo(typeof(Uno.Key))]
[assembly: TypeForwardedTo(typeof(Uno.Lazy))]
[assembly: TypeForwardedTo(typeof(Uno.LazyBehavior))]
[assembly: TypeForwardedTo(typeof(Uno.None<>))]
[assembly: TypeForwardedTo(typeof(Uno.Option))]
[assembly: TypeForwardedTo(typeof(Uno.Option<>))]
[assembly: TypeForwardedTo(typeof(Uno.OptionEqualityComparer<>))]
[assembly: TypeForwardedTo(typeof(Uno.OptionExtensions))]
[assembly: TypeForwardedTo(typeof(Uno.OptionType))]
[assembly: TypeForwardedTo(typeof(Uno.Some<>))]
[assembly: TypeForwardedTo(typeof(Uno.Pair<>))]
[assembly: TypeForwardedTo(typeof(Uno.Pair<,>))]
[assembly: TypeForwardedTo(typeof(Uno.Params))]
[assembly: TypeForwardedTo(typeof(Uno.Predicates))]
[assembly: TypeForwardedTo(typeof(Uno.Predicates<>))]
[assembly: TypeForwardedTo(typeof(Uno.Runtime))]
[assembly: TypeForwardedTo(typeof(Uno.RuntimeExtensions))]
[assembly: TypeForwardedTo(typeof(Uno.UnavailableResourceException))]
[assembly: TypeForwardedTo(typeof(Uno.WebRequestCreate))]
[assembly: TypeForwardedTo(typeof(Uno.FuncWebRequestCreate))]
[assembly: TypeForwardedTo(typeof(Uno.WebRequestCreateDecorator))]
[assembly: TypeForwardedTo(typeof(Uno.WebRequestCreateExtensions))]
[assembly: TypeForwardedTo(typeof(Uno.Validation.ValidationExtensionPoint<>))]
[assembly: TypeForwardedTo(typeof(Uno.Validation.ValidationHelper))]
[assembly: TypeForwardedTo(typeof(Uno.Threading.AsyncLock))]
[assembly: TypeForwardedTo(typeof(Uno.Threading.ISynchronizable<>))]
[assembly: TypeForwardedTo(typeof(Uno.Threading.ISynchronizableLock<>))]
[assembly: TypeForwardedTo(typeof(Uno.Threading.Synchronizable<>))]
[assembly: TypeForwardedTo(typeof(Uno.Threading.SynchronizableLock<>))]
[assembly: TypeForwardedTo(typeof(Uno.Threading.SynchronizableExclusiveLock<>))]
[assembly: TypeForwardedTo(typeof(Uno.Serialization.SerializationExtensionPoint<>))]
[assembly: TypeForwardedTo(typeof(Uno.Resources.EmbeddedResourceFactory))]
[assembly: TypeForwardedTo(typeof(Uno.Contracts.IContract))]
[assembly: TypeForwardedTo(typeof(Uno.Reflection.BindingBehavior))]
[assembly: TypeForwardedTo(typeof(Uno.Reflection.BindingContract))]
[assembly: TypeForwardedTo(typeof(Uno.Reflection.DefaultReflectionExtensions))]
[assembly: TypeForwardedTo(typeof(Uno.Reflection.EventDescriptor))]
[assembly: TypeForwardedTo(typeof(Uno.Reflection.IEventDescriptor))]
[assembly: TypeForwardedTo(typeof(Uno.Reflection.IMemberDescriptor))]
[assembly: TypeForwardedTo(typeof(Uno.Reflection.IMethodDescriptor))]
[assembly: TypeForwardedTo(typeof(Uno.Reflection.IReflectionExtensionPoint))]
[assembly: TypeForwardedTo(typeof(Uno.Reflection.IReflectionExtensionPoint<>))]
[assembly: TypeForwardedTo(typeof(Uno.Reflection.IReflectionExtensions))]
[assembly: TypeForwardedTo(typeof(Uno.Reflection.IValueMemberDescriptor))]
[assembly: TypeForwardedTo(typeof(Uno.Reflection.MemberDescriptor<>))]
[assembly: TypeForwardedTo(typeof(Uno.Reflection.PropertyDescriptor))]
[assembly: TypeForwardedTo(typeof(Uno.Reflection.ReflectionExtensionPoint<>))]
[assembly: TypeForwardedTo(typeof(Uno.Reflection.ValueMemberDescriptor<>))]
[assembly: TypeForwardedTo(typeof(Uno.Extensibility.ExtensionManagerExtensions))]
[assembly: TypeForwardedTo(typeof(Uno.Extensibility.IExtensionManager))]
[assembly: TypeForwardedTo(typeof(Uno.Extensibility.IExtensionManager<>))]
[assembly: TypeForwardedTo(typeof(Uno.Extensibility.ExtensionManager<>))]
[assembly: TypeForwardedTo(typeof(Uno.Extensibility.IExtension))]
[assembly: TypeForwardedTo(typeof(Uno.Extensibility.IExtension<>))]
[assembly: TypeForwardedTo(typeof(Uno.Expressions.EditableBinaryExpression))]
[assembly: TypeForwardedTo(typeof(Uno.Expressions.EditableConditionalExpression))]
[assembly: TypeForwardedTo(typeof(Uno.Expressions.EditableConstantExpression))]
[assembly: TypeForwardedTo(typeof(Uno.Expressions.EditableElementInit))]
[assembly: TypeForwardedTo(typeof(Uno.Expressions.EditableExpression<>))]
[assembly: TypeForwardedTo(typeof(Uno.Expressions.EditableExpressionCollection<>))]
[assembly: TypeForwardedTo(typeof(Uno.Expressions.EditableInvocationExpression))]
[assembly: TypeForwardedTo(typeof(Uno.Expressions.EditableLambdaExpression))]
[assembly: TypeForwardedTo(typeof(Uno.Expressions.EditableLambdaExpression<>))]
[assembly: TypeForwardedTo(typeof(Uno.Expressions.EditableListInitExpression))]
[assembly: TypeForwardedTo(typeof(Uno.Expressions.EditableMemberExpression))]
[assembly: TypeForwardedTo(typeof(Uno.Expressions.EditableMemberInitExpression))]
[assembly: TypeForwardedTo(typeof(Uno.Expressions.EditableMethodCallExpression))]
[assembly: TypeForwardedTo(typeof(Uno.Expressions.EditableNewArrayExpression))]
[assembly: TypeForwardedTo(typeof(Uno.Expressions.EditableNewExpression))]
[assembly: TypeForwardedTo(typeof(Uno.Expressions.EditableParameterExpression))]
[assembly: TypeForwardedTo(typeof(Uno.Expressions.EditableParameterExpressionCollection))]
[assembly: TypeForwardedTo(typeof(Uno.Expressions.EditableTypeBinaryExpression))]
[assembly: TypeForwardedTo(typeof(Uno.Expressions.EditableUnaryExpression))]
[assembly: TypeForwardedTo(typeof(Uno.Expressions.ExpressionFactory))]
[assembly: TypeForwardedTo(typeof(Uno.Expressions.Expressions<>))]
[assembly: TypeForwardedTo(typeof(Uno.Expressions.IEditableExpression))]
[assembly: TypeForwardedTo(typeof(Uno.Expressions.PredicateExpression))]
[assembly: TypeForwardedTo(typeof(Uno.Expressions.PredicateExpression<>))]
[assembly: TypeForwardedTo(typeof(Uno.Expressions.Builder.IPredicateBuilder<>))]
[assembly: TypeForwardedTo(typeof(Uno.Events.EventHandlerConverter<,>))]
[assembly: TypeForwardedTo(typeof(Uno.Equality.EqualityExtensionPoint<>))]
[assembly: TypeForwardedTo(typeof(Uno.Disposables.DisposableExtensions))]
[assembly: TypeForwardedTo(typeof(Uno.Decorator.Decorator<>))]
[assembly: TypeForwardedTo(typeof(Uno.Decorator.IDecorator<>))]
[assembly: TypeForwardedTo(typeof(Uno.Conversion.ConversionExtensionPoint))]
[assembly: TypeForwardedTo(typeof(Uno.Conversion.CustomConversionStrategy<,>))]
[assembly: TypeForwardedTo(typeof(Uno.Conversion.CustomCulturelessConversionStrategy<,>))]
[assembly: TypeForwardedTo(typeof(Uno.Conversion.DefaultConversionExtensions))]
[assembly: TypeForwardedTo(typeof(Uno.Conversion.EnumConversionStrategy))]
[assembly: TypeForwardedTo(typeof(Uno.Conversion.IConversionExtensions))]
[assembly: TypeForwardedTo(typeof(Uno.Conversion.ConversionExtensionsExtensions))]
[assembly: TypeForwardedTo(typeof(Uno.Conversion.IConversionStrategy))]
[assembly: TypeForwardedTo(typeof(Uno.Conversion.PrimitiveConversionStrategy))]
[assembly: TypeForwardedTo(typeof(Uno.Conversion.TypeConverterConversionStrategy))]
[assembly: TypeForwardedTo(typeof(Uno.Core.DisposableConditionalWeakTable<,>))]
[assembly: TypeForwardedTo(typeof(Uno.Core.Funcs<>))]
[assembly: TypeForwardedTo(typeof(Uno.Core.Funcs<,>))]
[assembly: TypeForwardedTo(typeof(Uno.Core.Collections.CollectionsExtensionsLegacy))]
[assembly: TypeForwardedTo(typeof(Uno.Collections.DictionaryExtensionsLegacy))]
[assembly: TypeForwardedTo(typeof(Uno.Core.Collections.EnumerableExtensionsLegacy))]
[assembly: TypeForwardedTo(typeof(Uno.Core.Collections.ListExtensionsLegacy))]
[assembly: TypeForwardedTo(typeof(Uno.Collections.CollectionAdapter<,>))]
[assembly: TypeForwardedTo(typeof(Uno.Collections.CollectionDecorator<>))]
[assembly: TypeForwardedTo(typeof(Uno.Collections.ConcatenatingDictionary))]
[assembly: TypeForwardedTo(typeof(Uno.Collections.ConditionalWeakTableSlow<,>))]
[assembly: TypeForwardedTo(typeof(Uno.Collections.DictionnaryCompositeDisposable<>))]
[assembly: TypeForwardedTo(typeof(Uno.Collections.ImmutableList<>))]
[assembly: TypeForwardedTo(typeof(Uno.Collections.LazyList<>))]
[assembly: TypeForwardedTo(typeof(Uno.Collections.ListAdapter<,>))]
[assembly: TypeForwardedTo(typeof(Uno.Collections.ListDecorator<>))]
[assembly: TypeForwardedTo(typeof(Uno.Collections.SynchronizedDictionary<,>))]
[assembly: TypeForwardedTo(typeof(Uno.Builder.BuilderContext<>))]
[assembly: TypeForwardedTo(typeof(Uno.Builder.BuilderContext))]
[assembly: TypeForwardedTo(typeof(Uno.Builder.IBuilder))]
[assembly: TypeForwardedTo(typeof(Uno.Builder.IBuilder<>))]
[assembly: TypeForwardedTo(typeof(Uno.Extensions.TaskExtensions))]
[assembly: TypeForwardedTo(typeof(Uno.Extensions.GroupingExtensions))]
[assembly: TypeForwardedTo(typeof(Uno.Extensions.ConversionExtensions))]
[assembly: TypeForwardedTo(typeof(Uno.Extensions.EqualityExtensions))]
[assembly: TypeForwardedTo(typeof(Uno.Extensions.EditableExpressionExtensions))]
[assembly: TypeForwardedTo(typeof(Uno.Extensions.ExpressionExtensions))]
[assembly: TypeForwardedTo(typeof(Uno.Extensions.ComparableExtensions))]
[assembly: TypeForwardedTo(typeof(Uno.Extensions.DateTimeExtensions))]
[assembly: TypeForwardedTo(typeof(Uno.Extensions.ExceptionExtensions))]
[assembly: TypeForwardedTo(typeof(Uno.Extensions.ExtensionPoint<>))]
[assembly: TypeForwardedTo(typeof(Uno.Extensions.ExtensionsProvider))]
[assembly: TypeForwardedTo(typeof(Uno.Extensions.FormattableExtensions))]
[assembly: TypeForwardedTo(typeof(Uno.Extensions.FuncAsyncExtensions))]
[assembly: TypeForwardedTo(typeof(Uno.Extensions.FuncMemoizeExtensions))]
[assembly: TypeForwardedTo(typeof(Uno.Extensions.IExtensionPoint))]
[assembly: TypeForwardedTo(typeof(Uno.Extensions.IExtensionPoint<>))]
[assembly: TypeForwardedTo(typeof(Uno.Extensions.IIndentedStringBuilder))]
[assembly: TypeForwardedTo(typeof(Uno.Extensions.IndentedStringBuilder))]
[assembly: TypeForwardedTo(typeof(Uno.Extensions.IndentedStringBuilderExtensions))]
[assembly: TypeForwardedTo(typeof(Uno.Extensions.StringBuilderExtensions))]
[assembly: TypeForwardedTo(typeof(Uno.Extensions.InvocationLockingMode))]
[assembly: TypeForwardedTo(typeof(Uno.Extensions.NullableExtensions))]
[assembly: TypeForwardedTo(typeof(Uno.Extensions.ObjectExtensions))]
[assembly: TypeForwardedTo(typeof(Uno.Extensions.AssemblyExtensions))]
[assembly: TypeForwardedTo(typeof(Uno.Extensions.MemberDescriptorExtensions))]
[assembly: TypeForwardedTo(typeof(Uno.Extensions.ReflectionExtensions))]
[assembly: TypeForwardedTo(typeof(Uno.Extensions.TypeExtensions))]
[assembly: TypeForwardedTo(typeof(Uno.Extensions.SerializationExtensions))]
[assembly: TypeForwardedTo(typeof(Uno.Extensions.ServiceLocatorProviderExtensions))]
[assembly: TypeForwardedTo(typeof(Uno.Extensions.SynchronizableExtensions))]
[assembly: TypeForwardedTo(typeof(Uno.Extensions.StringValidationExtensions))]
[assembly: TypeForwardedTo(typeof(Uno.Extensions.ValidationExtensions))]
[assembly: TypeForwardedTo(typeof(Uno.Extensions.ValueType.ByteSupport))]
[assembly: TypeForwardedTo(typeof(Uno.Extensions.ValueType.EnumSupport<>))]
[assembly: TypeForwardedTo(typeof(Uno.Extensions.ValueType.Int32Support))]
[assembly: TypeForwardedTo(typeof(Uno.Extensions.ValueType.IValueSupport))]
[assembly: TypeForwardedTo(typeof(Uno.Extensions.ValueType.IValueSupport<>))]
[assembly: TypeForwardedTo(typeof(Uno.Extensions.ValueType.ValueSupport))]
[assembly: TypeForwardedTo(typeof(Uno.Extensions.ValueType.ValueSupport<>))]
[assembly: TypeForwardedTo(typeof(Uno.Extensions.ValueType.ValueSupportExtensions))]
[assembly: TypeForwardedTo(typeof(Uno.Async.ActionServiceEntry))]
[assembly: TypeForwardedTo(typeof(Uno.Async.ActionService))]
[assembly: TypeForwardedTo(typeof(Uno.Async.AsyncResult))]
[assembly: TypeForwardedTo(typeof(Uno.Async.AsyncResult<>))]
[assembly: TypeForwardedTo(typeof(Uno.Async.AsyncResultDecorator))]
[assembly: TypeForwardedTo(typeof(Uno.Async.IActionService))]
[assembly: TypeForwardedTo(typeof(Uno.Async.IAsyncService))]
[assembly: TypeForwardedTo(typeof(Uno.Async.SyncService))]
[assembly: TypeForwardedTo(typeof(Uno.NullDisposable))]
[assembly: TypeForwardedTo(typeof(Uno.Disposables.AnonymousDisposable))]
[assembly: TypeForwardedTo(typeof(Uno.Disposables.CancellationDisposable))]
[assembly: TypeForwardedTo(typeof(Uno.Disposables.CompositeDisposable))]
[assembly: TypeForwardedTo(typeof(Uno.Disposables.CompositeDisposableExtensions))]
[assembly: TypeForwardedTo(typeof(Uno.Disposables.ConditionalDisposable))]
[assembly: TypeForwardedTo(typeof(Uno.Disposables.DefaultDisposable))]
[assembly: TypeForwardedTo(typeof(Uno.Disposables.Disposable))]
[assembly: TypeForwardedTo(typeof(Uno.Disposables.ICancelable))]
[assembly: TypeForwardedTo(typeof(Uno.Disposables.IExtensibleDisposable))]
[assembly: TypeForwardedTo(typeof(Uno.Disposables.RefCountDisposable))]
[assembly: TypeForwardedTo(typeof(Uno.Disposables.SerialDisposable))]
[assembly: TypeForwardedTo(typeof(Uno.ActionAsync))]
[assembly: TypeForwardedTo(typeof(Uno.ActionAsync<>))]
[assembly: TypeForwardedTo(typeof(Uno.ActionAsync<,>))]
[assembly: TypeForwardedTo(typeof(Uno.ActionAsync<,,>))]
[assembly: TypeForwardedTo(typeof(Uno.ActionAsync<,,,>))]
[assembly: TypeForwardedTo(typeof(Uno.Actions))]
[assembly: TypeForwardedTo(typeof(Uno.Actions<>))]
[assembly: TypeForwardedTo(typeof(Uno.Actions<,>))]
[assembly: TypeForwardedTo(typeof(Uno.CachedTuple))]
[assembly: TypeForwardedTo(typeof(Uno.CachedTuple<,>))]
[assembly: TypeForwardedTo(typeof(Uno.CachedTuple<,,>))]
[assembly: TypeForwardedTo(typeof(Uno.CachedTuple<,,,>))]
[assembly: TypeForwardedTo(typeof(Uno.DateTimeUnit))]
[assembly: TypeForwardedTo(typeof(Uno.DisposableAction))]
[assembly: TypeForwardedTo(typeof(Uno.FuncAsync<>))]
[assembly: TypeForwardedTo(typeof(Uno.FuncAsync<,>))]
[assembly: TypeForwardedTo(typeof(Uno.FuncAsync<,,>))]
[assembly: TypeForwardedTo(typeof(Uno.FuncAsync<,,,>))]
[assembly: TypeForwardedTo(typeof(Uno.FuncAsync<,,,,>))]
[assembly: TypeForwardedTo(typeof(Uno.Funcs))]
[assembly: TypeForwardedTo(typeof(Uno.NullableFuncs<>))]
[assembly: TypeForwardedTo(typeof(Uno.LegacyAttribute))]
[assembly: TypeForwardedTo(typeof(Uno.Null))]
[assembly: TypeForwardedTo(typeof(Uno.Extensions.ActionAsyncExtensions))]
[assembly: TypeForwardedTo(typeof(Uno.Extensions.ActionExtensions))]
[assembly: TypeForwardedTo(typeof(Uno.Extensions.CurryExtensions))]
[assembly: TypeForwardedTo(typeof(Uno.Extensions.DoubleExtensions))]
[assembly: TypeForwardedTo(typeof(Uno.Extensions.EnumHelper))]
[assembly: TypeForwardedTo(typeof(Uno.Extensions.FuncExtensions))]
[assembly: TypeForwardedTo(typeof(Uno.Extensions.MatchExtensions))]
[assembly: TypeForwardedTo(typeof(Uno.Extensions.StreamExtensions))]
[assembly: TypeForwardedTo(typeof(Uno.Extensions.StringExtensions))]
[assembly: TypeForwardedTo(typeof(Uno.Extensions.TextWriterExtensions))]
[assembly: TypeForwardedTo(typeof(Uno.Extensions.UriExtensions))]
[assembly: TypeForwardedTo(typeof(Uno.Extensions.WeakReferenceExtensions))]
[assembly: TypeForwardedTo(typeof(Uno.Comparison.FuncComparer<>))]
[assembly: TypeForwardedTo(typeof(Uno.Core.Comparison.FastTypeComparer))]
[assembly: TypeForwardedTo(typeof(Uno.Core.Equality.EqualityComparerExtensions))]
[assembly: TypeForwardedTo(typeof(Uno.Equality.CollectionEqualityComparer<>))]
[assembly: TypeForwardedTo(typeof(Uno.Equality.FuncEqualityComparer))]
[assembly: TypeForwardedTo(typeof(Uno.Equality.FuncEqualityComparer<>))]
[assembly: TypeForwardedTo(typeof(Uno.Equality.FuncEqualityComparer<,>))]
[assembly: TypeForwardedTo(typeof(Uno.Equality.IKeyEquatable))]
[assembly: TypeForwardedTo(typeof(Uno.Equality.IKeyEquatable<>))]
[assembly: TypeForwardedTo(typeof(Uno.Equality.KeyEqualityComparer))]
[assembly: TypeForwardedTo(typeof(Uno.Equality.KeyEqualityComparer<>))]
[assembly: TypeForwardedTo(typeof(Uno.Equality.WeakReferenceEqualityComparer<>))]
[assembly: TypeForwardedTo(typeof(Uno.Logging.LogExtensions))]
[assembly: TypeForwardedTo(typeof(Uno.Extensions.LogExtensionPoint))]
[assembly: TypeForwardedTo(typeof(Uno.Transactional))]
[assembly: TypeForwardedTo(typeof(Uno.Threading.AsyncEvent))]
[assembly: TypeForwardedTo(typeof(Uno.Threading.FastTaskCompletionSource<>))]
[assembly: TypeForwardedTo(typeof(Uno.Threading.FastAsyncLock))]
[assembly: TypeForwardedTo(typeof(Uno.ReferenceEqualityComparer<>))]


#if !WINDOWS_UWP && !XAMARIN
[assembly: TypeForwardedTo(typeof(Uno.NotFoundException))]
[assembly: TypeForwardedTo(typeof(Uno.ReadOnlyException))]
[assembly: TypeForwardedTo(typeof(Uno.WeakReference<>))]
[assembly: TypeForwardedTo(typeof(Uno.Reflection.NestedTypeDescriptor))]
[assembly: TypeForwardedTo(typeof(Uno.Reflection.TypeDescriptor))]
[assembly: TypeForwardedTo(typeof(Uno.Reflection.FieldDescriptor))]
[assembly: TypeForwardedTo(typeof(Uno.Localisation.CultureContext))]
#endif
